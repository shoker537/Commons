plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
    id 'maven-publish'
}

def repoUrl = "https://nexus.shoker.su/repository/maven-releases/"

group = 'ru.shk'
version = '1.3.3'
def nexusProperties = new Properties()
file("nexus.properties").withInputStream { nexusProperties.load(it) }
publishing {
    repositories {
        maven {
            credentials {
                username "${nexusProperties.get("user")}"
                password "${nexusProperties.get("password")}"
            }
            url "${repoUrl}"
        }
    }
    publications {
        maven(MavenPublication) {
            groupId "${group}"
            artifactId "Commons"
            version "${version}"
            artifact "/build/libs/${project.name}.jar"
        }
    }
}

task renameArtifacts (type: Copy) {
    from('build/libs/')
    into('build/libs/')
    include '*-all.jar'
    rename { String filename ->
        filename.replace("-${project.version}-all", "")
    }
}
task deleteUnused(type: Delete) {
    delete "build/libs/${project.name}-${project.version}.jar"
    delete "build/libs/${project.name}-${project.version}-all.jar"
}
shadowJar {
    exclude 'META-INF/*'
}

repositories {
    mavenCentral()
    maven {
        name = 'enginehub'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'mojang'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        name = 'shoker.su'
        url = 'https://nexus.shoker.su/repository/maven-releases/'
    }
    maven {
        name = 'codemc'
        url = 'https://repo.codemc.io/repository/maven-snapshots/'
    }
    maven {
        name = 'exceptionflug'
        url = 'https://mvn.exceptionflug.de/repository/exceptionflug-public/'
    }
}

dependencies {
    compileOnly files('D:/Libraries/spigot-1.17.1.jar')
    compileOnly files('D:/Libraries/spigot-1.18.2-remapped-mojang.jar')
    compileOnly files('D:/Libraries/worldedit-bukkit-7.3.0.jar')
    compileOnly files('D:/Libraries/worldedit-core-7.3.0.jar')
    implementation 'commons-io:commons-io:2.11.0'
    compileOnly 'dev.simplix:protocolize-api:2.1.2'
    compileOnly 'net.md-5:bungeecord-api:1.18-R0.1-SNAPSHOT'
    implementation 'net.wesjd:anvilgui:1.5.3-SNAPSHOT'
    compileOnly 'ru.shk:MySQLAPI:2.0.1'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.17.1'
    compileOnly 'com.mojang:authlib:1.5.21'
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'

    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

compileJava.options.encoding = 'UTF-8'
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
